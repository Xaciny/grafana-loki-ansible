x-common-extensions: &common
    restart: unless-stopped
    security_opt:
      - no-new-privileges=true
    # cap_drop: 
    #   - ALL

services:

{% if ansible_host == master_ip %}
  postgres:
    <<: *common
    container_name: postgres
    image: postgres:15
    environment:
      POSTGRES_USER: {{ master_user }}
      POSTGRES_PASSWORD: {{ master_password }}
      POSTGRES_DB: {{ master_db }}
    ports:
      - "5432:5432"
    volumes:
      - ./psql/init_sql.conf:/docker-entrypoint-initdb.d/init_sql.conf
    command:
      - "postgres"
    # cap_add:
    #   - CHOWN
    #   - SYS_ADMIN
      
{% else %} 
  postgres:
    <<: *common
    container_name: postgres
    image: postgres:15
    environment:
      POSTGRES_USER: {{ slave_user }}
      POSTGRES_PASSWORD: {{ slave_password }}
      POSTGRES_DB: {{ slave_db }}
    ports:
      - "5432:5432"
    command: >
      postgres -D /var/lib/postgresql/data -c hot_standby=on -c primary_conninfo='host={{ master_ip }} port=5432 user={{ replication_user }} password={{ replication_password }}'
    # cap_add:
    #   - CHOWN
    #   - SYS_ADMIN
{% endif %}


  loki:
    <<: *common
    container_name: loki
    hostname: loki
    image: grafana/loki:3.4
    ports:
      - "3100:3100"
    volumes:
      - ./loki/config:/etc/loki
    command: -config.file=/etc/loki/loki-config.yaml

  # promtail:
  #   <<: *common
  #   image: grafana/promtail:2.3.0
  #   container_name: promtail
  #   volumes:
  #     - /var/lib/docker/containers:/var/lib/docker/containers:ro
  #     - ./promtail/config:/etc/promtail
  #   command: -config.file=/etc/promtail/promtail-config.yml


  grafana:
    <<: *common
    container_name: grafana
    image: grafana/grafana:latest
    user: "0:0"
    environment:
      GF_DATABASE_TYPE: postgres
      GF_DATABASE_HOST: {{ master_ip }}:5432
      GF_DATABASE_NAME: {{ master_db }}
      GF_DATABASE_USER: {{ master_user }}
      GF_DATABASE_PASSWORD: {{ master_password }}
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
      # TZ=${SYSTEM_TIMEZONE:-Europe/Moscow}
    ports:
      - 80:3000
    volumes:
    - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources

  # nginx: 
  #   <<: *common
  #   container_name: nginx
  #   image: nginx:latest
  #   user: nginx
  #   volumes: 
  #     - "./nginx/http.d/nginx.conf:/etc/nginx/http.d/nginx.conf"   
  #     - "./crt:/"
  #     - "./key:/"
  #   port:
  #     - "443:443"

networks:
  default:
    name: monitoring_network
    driver: bridge