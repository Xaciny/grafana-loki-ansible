- name: Set up Grafana and Loki replication
  hosts: all
  become: true
  vars:
    grafana_version: "latest"
    loki_version: "2.8.0"
    loki_data_dir: "/data/loki"
    grafana_data_dir: "/data/grafana"
    nginx_ssl_dir: "/etc/nginx/ssl"
    domain_name: "example.com"
    grafana_admin_password: "admin"

  tasks:
    - name: Install Docker
      ansible.builtin.yum:
        name: docker
        state: present

    - name: Start Docker service
      ansible.builtin.service:
        name: docker
        state: started
        enabled: true

    - name: Pull Loki Docker image
      ansible.builtin.command:
        cmd: docker pull grafana/loki:{{ loki_version }}

    - name: Pull Grafana Docker image
      ansible.builtin.command:
        cmd: docker pull grafana/grafana:{{ grafana_version }}

    - name: Create Loki data directory
      ansible.builtin.file:
        path: "{{ loki_data_dir }}"
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Create Grafana data directory
      ansible.builtin.file:
        path: "{{ grafana_data_dir }}"
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Deploy Loki container
      ansible.builtin.docker_container:
        name: loki
        image: grafana/loki:{{ loki_version }}
        state: started
        ports:
          - "3100:3100"
        volumes:
          - "{{ loki_data_dir }}:/loki"
        env:
          - LOKI_CONFIG: |
              auth_enabled: false
              server:
                http_listen_port: 3100
              storage_config:
                boltdb_shipper:
                  active_index_directory: /loki/index
                  shared_store: filesystem
                  cache_location: /loki/cache
                filesystem:
                  directory: /loki/chunks

    - name: Deploy Grafana container
      ansible.builtin.docker_container:
        name: grafana
        image: grafana/grafana:{{ grafana_version }}
        state: started
        ports:
          - "3000:3000"
        volumes:
          - "{{ grafana_data_dir }}:/var/lib/grafana"
        env:
          - GF_SECURITY_ADMIN_PASSWORD: "{{ grafana_admin_password }}"

    - name: Configure Nginx for HTTPS
      ansible.builtin.template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/nginx.conf

    - name: Copy SSL certificates
      ansible.builtin.copy:
        src: files/{{ item }}
        dest: "{{ nginx_ssl_dir }}/{{ item }}"
      with_items:
        - example.com.crt
        - example.com.key

    - name: Restart Nginx
      ansible.builtin.service:
        name: nginx
        state: restarted
